"""Proposal of full list models with relationships

Revision ID: c6240450504c
Revises: 056d43ecffff
Create Date: 2024-11-23 13:43:58.794458

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c6240450504c'
down_revision: Union[str, None] = '056d43ecffff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_table('doughs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('big_size', sa.Boolean(), nullable=True),
    sa.Column('on_thick_pastry', sa.Boolean(), nullable=True),
    sa.Column('without_gluten', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doughs_id'), 'doughs', ['id'], unique=False)
    op.create_table('ingredients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category', sa.Enum('VEGETABLE', 'MEAT', 'DAIRY', name='ingredientcategory'), nullable=False),
    sa.Column('in_stock', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingredients_id'), 'ingredients', ['id'], unique=False)
    op.create_table('pizza_doughs',
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('dough_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dough_id'], ['doughs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pizza_id', 'dough_id')
    )
    op.create_table('pizza_ingredients',
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('pizza_id', 'ingredient_id')
    )
    op.create_table('order_pizza_doughs',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('dough_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dough_id'], ['doughs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('order_id', 'pizza_id', 'dough_id')
    )
    op.add_column('orders', sa.Column('order_start_time', sa.DateTime(), nullable=True))
    op.add_column('orders', sa.Column('total_price', sa.Float(), nullable=False))
    op.add_column('orders', sa.Column('client_id', sa.Integer(), nullable=True))
    op.drop_constraint('orders_pizza_id_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'clients', ['client_id'], ['id'])
    op.drop_column('orders', 'customer_name')
    op.drop_column('orders', 'order_date')
    op.drop_column('orders', 'pizza_id')
    op.add_column('pizzas', sa.Column('in_menu', sa.Boolean(), nullable=True))
    op.drop_column('pizzas', 'size')
    op.drop_column('pizzas', 'ingredients')
    op.drop_column('pizzas', 'price')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pizzas', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('pizzas', sa.Column('ingredients', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('pizzas', sa.Column('size', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('pizzas', 'in_menu')
    op.add_column('orders', sa.Column('pizza_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('customer_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_pizza_id_fkey', 'orders', 'pizzas', ['pizza_id'], ['id'])
    op.drop_column('orders', 'client_id')
    op.drop_column('orders', 'total_price')
    op.drop_column('orders', 'order_start_time')
    op.drop_table('order_pizza_doughs')
    op.drop_table('pizza_ingredients')
    op.drop_table('pizza_doughs')
    op.drop_index(op.f('ix_ingredients_id'), table_name='ingredients')
    op.drop_table('ingredients')
    op.drop_index(op.f('ix_doughs_id'), table_name='doughs')
    op.drop_table('doughs')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###
